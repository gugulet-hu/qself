[
        {
                "logic": "transaction['type'] = 'Employment' && transaction['accountFrom'] != 'Income'",
                "message": "When Employment is the type set, the accountFrom needs to be Income."
        },
        {
                "logic": "transaction['accountFrom'] = 'Expenses'",
                "message": "Expenses can not be the account used for AccountFrom."
        },
        {
                "logic": "transaction['accountTo'] = 'Income'",
                "message": "Income can not be the account used for AccountTo."
        },
        {
                "logic": "transaction['quantityUnit'] = 'km' && transaction['group'] != 'Transport'",
                "message": "The kilometre quantityUnit is only for Transport."
        },
        {
                "logic": "transaction['quantityUnit'] = 'nights' && transaction['group'] != 'Accommodation'",
                "message": "The nights quantityUnit is only for Accommodation."
        },
        {
                "logic": "transaction['type'] = 'Transfer' && transaction['accountFrom'] = 'Income'",
                "message": "When Transfer is the type set, the accountFrom can not be Income."
        },
        {
                "logic": "transaction['type'] = 'Transfer' && transaction['accountTo'] = 'Income'",
                "message": "When Transfer is the type set, the accountFrom can not be Income."
        },
        {
                "logic": "transaction['type'] = 'Transfer' && transaction['accountFrom'] = 'Expenses'",
                "message": "When Transfer is the type set, the accountFrom can not be Expenses."
        },
        {
                "logic": "transaction['type'] = 'Transfer' && transaction['accountTo'] = 'Expenses'",
                "message": "When Transfer is the type set, the accountFrom can not be Expenses."
        },
        {
                "logic": "transaction['type'] = 'Transfer' && ( transaction['group'] = 'Interaccount' || transaction['group'] = 'Interaccount')",
                "message": "When Transfer is the type set, the group needs to be Interaccount ot Intraccount."
        },
        {
                "logic": "transaction['currency'] = 'ZAR' && transaction['accountFrom'] != 'FNB Cheque'",
                "message": "FNB is a rand-denominated account.."
        }
]
